@startuml
!theme carbon-gray

package view {
    class View {
        + startView(args: String[]): void
    }
    class CustomerView extends View {
    }
    class RentalView extends View {
    }
    class VehicleView  extends View {
    }
    class AgencyView  extends View {
    }
}

package service {
    class CustomerService {
        + add(): void
        + getByid(): Optional<Customer>
        + getAll(): List<Customer>
        + update(): void
        + delete(): void
    }
    
    class RentalService {
        + add(): void
        + getByid(): Optional<Rental>
        + getAll(): List<Rental>
        + update(): void
        + delete(): void
    }
    
    class AgencyService {
        + add(): void
        + getByid(): Optional<Rental>
        + getAll(): List<Rental>
        + update(): void
        + delete(): void
    }
    
    class VehicleService {
        + add(): void
        + getByid(): Optional<Rental>
        + getAll(): List<Rental>
        + update(): void
        + delete(): void
    }
    
}

package dao {

    class DAO {
      + void save(T entity);
      + Optional<T> findById(int id);
      + List<T> findAll();
      + List<T> findAll(Predicate<T> filter);
      + List<T> findAll(Comparator<T> comparator);
      + void update(int id, T entity);
      + void delete(int id);
    }
    class CustomerDAO implements DAO {
     - table: DatabaseTable<Customer>
    }
    class VehicleDAO implements DAO {
     - table: DatabaseTable<Vehicle>
    }
    class RentalDAO implements DAO {
     - table: DatabaseTable<Rental>
    }
    class AgencyDAO implements DAO {
     - table: DatabaseTable<Agency>
    }
}

package database {
    interface DatabaseTableI<T extends Entity>{
      +  save(T entity);
      + Optional<T> findById(long id);
      + List<T> findAll();
      + void update(int id, T entity);
      + void delete(int id);
    }
    class DatabaseTable implements DatabaseTableI {
        - nextId : int
        - entities : Map<Integer, T> 
    }
    class Database {
      - tables: Map<Class<? extends Entity>, DatabaseTable<? extends Entity>>
      - instance: Database
      + getInstance: Database
    }
}

package entity {
class Entity {
    - int id;
    + boolean equals(Object obj);
}

class Customer extends Entity {
    - String name;
    - String email;
}

class Rental extends Entity {
    - Date startDate;
    - Date endDate;
    - double amountPaid;
    - Date returnedDate;
    - VehicleEntity vehicle;
    - CustomerEntity customer;
}

class Agency extends Entity {
    - String name;
    - String location;
    - String phoneNumber;
}

class Vehicle extends Entity {
    - String make;
    - String model;
    - int year;
    - String color;
    - double rentalPricePerDay;
    - boolean isAvailable;
    - String fuelType;
}

class Motorcycle extends Vehicle {
    - int engineSize;
    - String type;
}

class Car extends Vehicle {
    - int numDoors;
    - String transmissionType;
    - boolean hasAirConditioning;
}
}

DatabaseTable <- Database
Customer <- Rental
Vehicle <- Rental
Vehicle -> Agency

CustomerView -> CustomerService
CustomerService -> CustomerDAO
CustomerDAO -> DatabaseTable

RentalView -> RentalService
RentalService -> RentalDAO
RentalDAO -> DatabaseTable

VehicleView -> VehicleService
VehicleService -> VehicleDAO
VehicleDAO -> DatabaseTable

AgencyView -> AgencyService
AgencyService -> AgencyDAO
AgencyDAO -> DatabaseTable

