@startuml

package view {
    class MainView {
        + startView(args: String[]): void
    }
    class UserView {
     + startView(args: String[]): void
    }
    class RentalView {
     + startView(args: String[]): void
    }
    class VehicleView {
     + startView(args: String[]): void
    }
    class AgencyView {
     + startView(args: String[]): void
    }
}

package service {
    class CustomerService {
        + create(): BookEntity
        + getOne(): BookEntity
        + getMany(): BookEntity[]
        + update(): BookEntity[]
        + delete(): void
    }
    
    class RentalService {
        + create(): BookEntity
        + getOne(): BookEntity
        + getMany(): BookEntity[]
        + update(): BookEntity[]
        + delete(): void
    }
    
    class AgencyService {
        + create(): BookEntity
        + getOne(): BookEntity
        + getMany(): BookEntity[]
        + update(): BookEntity[]
        + delete(): void
    }
    
    class VehicleService {
        + create(): BookEntity
        + getOne(): BookEntity
        + getMany(): BookEntity[]
        + update(): BookEntity[]
        + delete(): void
    }
    
}

package dao {

    class DAO {
      void save(T entity);
      Optional<T> findById(int id);
      List<T> findAll();
      List<T> findAll(Predicate<T> filter);
      List<T> findAll(Comparator<T> comparator);
      void update(int id, T entity);
      void delete(int id);
    }
    class CustomerDAO implements DAO {
    }
    class Vehicl~~~~~~~eDAO implements DAO {
    }
    class RentalDAO implements DAO {
    }
    class AgencyDAO implements DAO {
    }
}

package database {
    interface DatabaseTableI<T extends Entity>{
      +  save(T entity);
      + Optional<T> findById(long id);
      + List<T> findAll();
      + void update(int id, T entity);
      + void delete(int id);
    }
    class DatabaseTable implements DatabaseTableI {
        nextId : int
        data : List<T extends Entity>
    }
    class Database {
      TODO
      List<DatabaseTable>
      Database
      getInstance
    }
}

package entity {
class Entity {
    int id;
    boolean equals(Object obj);
}

class Customer extends Entity {
    String firstName;
    String lastName;
    String email;
    String phoneNumber;
}

class Rental extends Entity {
    Date startDate;
    Date endDate;
    double amountPaid;
    Date returnedDate;
    VehicleEntity vehicle;
    CustomerEntity customer;
}

class Agency extends Entity {
    String name;
    String location;
    String phoneNumber;
}

class Vehicle extends Entity {
    String make;
    String model;
    int year;
    String color;
    String licensePlate;
    double rentalPricePerDay;
    boolean isAvailable;
    String fuelType;
}

class Motorcycle extends Vehicle {
    int engineSize;
    String type;
}

class Car extends Vehicle {
    int numDoors;
    String transmissionType;
    boolean hasAirConditioning;
}
}

DatabaseTable <- Database
Customer <- Rental
Vehicle <- Rental
Vehicle -> Agency

VehicleView <- MainView
AgencyView <- MainView
UserView <- MainView
RentalView <- MainView




